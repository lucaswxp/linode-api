// Generated by CoffeeScript 2.0.2
(function() {
  var LinodeClient, api_defs, fs, qs, request;

  request = require('request');

  qs = require('querystring');

  fs = require('fs');

  api_defs = JSON.parse(fs.readFileSync(__dirname + '/../data/api.json'));

  LinodeClient = class LinodeClient {
    constructor(api_key) {
      this.api_key = api_key;
      this.base_uri = `https://api.linode.com/?api_key=${this.api_key}`;
    }

    // Invoke a Linode API action with given arguments object.
    // Callback is a Function that takes (error, response).
    // See http://www.linode.com/api/ for API details.
    // Example:
    // c = new LinodeClient api_key
    // c.call 'test.echo', {msg: 'hello'}, (err, res) -> console.log res
    call(action, args, callback) {
      var uri;
      uri = `${this.base_uri}&api_action=${action}&${qs.stringify(args)}`;
      return request({uri}, function(err, res, body) {
        var e, obj;
        try {
          obj = JSON.parse(body);
        } catch (error) {
          e = error;
          return callback("Linode returned an invalid JSON", void 0);
        }
        if (obj.ERRORARRAY && obj.ERRORARRAY.length > 0) {
          return callback(obj.ERRORARRAY[0].ERRORMESSAGE, void 0);
        } else {
          if (obj.DATA) {
            return callback(void 0, obj.DATA);
          } else {
            return callback(void 0, obj);
          }
        }
      });
    }

  };

  exports.LinodeClient = LinodeClient;

  exports.dump_api = function() {
    var i, len, method, param, params, s;
    s = "";
    for (method in api_defs) {
      params = api_defs[method];
      s += `${method}\n`;
      for (i = 0, len = params.length; i < len; i++) {
        param = params[i];
        s += `  ${param.param} ${(param.required ? '(required)' : '(optional)')}\n`;
      }
      s += "\n";
    }
    return s;
  };

}).call(this);
